{"version":3,"sources":["api/api.ts","api/posts.ts","components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/comments.ts","api/users.ts","App.tsx","index.tsx"],"names":["BASE_URL","getData","url","options","a","fetch","response","json","create","postId","name","email","body","method","headers","JSON","stringify","getUserPosts","userId","PostsList","posts","selectedPostId","handleClick","className","map","post","title","type","value","onClick","id","NewCommentForm","addNewComment","useState","userName","setUserName","userEmail","setUserEmail","userBody","setUserBody","onSubmit","event","preventDefault","placeholder","onChange","target","PostDetails","selectedPost","comments","setComments","visibleComments","setVaisibleComments","loadComments","commentsFromServer","useEffect","deleteComment","commentId","length","comment","getUsers","App","setPosts","selectedUserId","setSelectedUserId","setSelectedPostId","setSelectedPost","users","setUsers","loadSelectedPost","postFromServer","loadUserPosts","postsFromServer","loadUsers","userFromServer","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bce8cb3c.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n\nexport async function getData<T>(url: string, options?: {}): Promise<T> {\n  const response = await fetch(`${BASE_URL}${url}`, options);\n\n  return response.json();\n}\n\nexport const remove = (url: string) => {\n  return getData(url, { method: 'DELETE' });\n};\n\nexport const create = async (\n  postId: number,\n  name: string,\n  email: string,\n  body: string,\n): Promise<Comment> => {\n  const response = await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n\n  return response.json();\n};\n","import { getData } from './api';\n\nexport function getPosts() {\n  return getData<Post[]>('/posts');\n}\n\nexport function getUserPosts(userId: number) {\n  if (userId) {\n    return getData<Post[]>(`/posts?userId=${userId}`);\n  }\n\n  return getPosts();\n}\n\nexport function getPostDetails(postId: number) {\n  return getData<Post>(`/posts?userId=${postId}`);\n}\n","import React from 'react';\nimport './PostsList.scss';\n\ntype Props = {\n  posts: Post[],\n  selectedPostId: number,\n  handleClick: (postId: number) => void,\n\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  selectedPostId,\n  handleClick,\n}) => {\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            className=\"PostsList__item\"\n            key={post.id}\n          >\n            <div>\n              <b>\n                {`[User #${post.userId}]:`}\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              value={selectedPostId}\n              onClick={() => handleClick(post.id)}\n            >\n              {selectedPostId === post.id\n                ? 'Close'\n                : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  addNewComment: (name: string, email: string, body: string) => void;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ addNewComment }) => {\n  const [userName, setUserName] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userBody, setUserBody] = useState('');\n\n  const clearForm = () => {\n    setUserName('');\n    setUserEmail('');\n    setUserBody('');\n  };\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addNewComment(userName, userEmail, userBody);\n    clearForm();\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={userName}\n          onChange={(event) => {\n            setUserName(event.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={userEmail}\n          onChange={(event) => {\n            setUserEmail(event.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={userBody}\n          onChange={(event) => {\n            setUserBody(event.target.value);\n          }}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostComments } from '../../api/comments';\nimport './PostDetails.scss';\nimport { remove, create } from '../../api/api';\n\ntype Props = {\n  selectedPostId: number,\n  selectedPost: Post,\n};\n\nexport const PostDetails: React.FC<Props> = ({ selectedPostId, selectedPost }) => {\n  const [comments, setComments] = useState<Comments[]>([]);\n  const [visibleComments, setVaisibleComments] = useState(true);\n\n  const loadComments = async () => {\n    const commentsFromServer = await getPostComments(selectedPostId);\n\n    setComments(commentsFromServer);\n  };\n\n  useEffect(() => {\n    loadComments();\n  }, [selectedPostId]);\n\n  const showComments = () => {\n    setVaisibleComments(!visibleComments);\n  };\n\n  const deleteComment = async (commentId: number) => {\n    await remove(`/comments/${commentId}`);\n    await loadComments();\n  };\n\n  const addNewComment = async (name: string, email: string, body: string) => {\n    await create(selectedPostId, name, email, body);\n    await loadComments();\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      <section className=\"PostDetails__post\">\n        <p>{selectedPost.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={showComments}\n        >\n          {visibleComments ? (\n            `Hide ${comments.length} comments`\n          ) : (\n            `Show ${comments.length} comments`\n          )}\n        </button>\n\n        {visibleComments && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                key={comment.id}\n                className=\"PostDetails__list-item\"\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => deleteComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm addNewComment={addNewComment} />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { getData } from './api';\n\nexport function getComments() {\n  return getData<Post[]>('/comments');\n}\n\nexport function getPostComments(postId: number) {\n  return getData<Comments[]>(`/comments?postId=${postId}`);\n}\n","export const BASE_URL = 'https://mate.academy/students-api';\n\nexport async function getUsers(): Promise<User[]> {\n  const response = await fetch(`${BASE_URL}/users`);\n\n  return response.json();\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState } from 'react';\nimport { getUserPosts, getPostDetails } from './api/posts';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUsers } from './api/users';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n  const [users, setUsers] = useState<User[]>([]);\n\n  const loadSelectedPost = async () => {\n    const postFromServer = await getPostDetails(selectedPostId);\n\n    setSelectedPost(postFromServer);\n  };\n\n  const loadUserPosts = async () => {\n    const postsFromServer = await getUserPosts(selectedUserId);\n\n    setPosts(postsFromServer);\n  };\n\n  const loadUsers = async () => {\n    const userFromServer = await getUsers();\n\n    setUsers(userFromServer);\n  };\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  useEffect(() => {\n    if (selectedPostId) {\n      loadSelectedPost();\n    }\n  }, [selectedPostId]);\n\n  useEffect(() => {\n    loadUserPosts();\n  }, [selectedUserId]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n  };\n\n  const handleClick = (postId: number) => (\n    postId !== selectedPostId\n      ? setSelectedPostId(postId)\n      : setSelectedPostId(0)\n  );\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            onChange={handleChange}\n            value={selectedUserId}\n            className=\"App__user-selector\"\n          >\n            <option key=\"0\" value=\"\">All users</option>\n            {users.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            handleClick={handleClick}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId && selectedPost ? (\n            <PostDetails\n              selectedPostId={selectedPostId}\n              selectedPost={selectedPost}\n            />\n          ) : (\n            <p>No post selected</p>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}