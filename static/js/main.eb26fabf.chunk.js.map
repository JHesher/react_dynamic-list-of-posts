{"version":3,"sources":["api/api.ts","api/posts.ts","components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/comments.ts","App.tsx","index.tsx"],"names":["BASE_URL","getData","url","options","a","fetch","response","json","create","postId","name","email","body","method","headers","JSON","stringify","getUserPosts","userId","PostsList","posts","selectedPostId","handleClick","className","map","post","title","type","value","onClick","id","NewCommentForm","addNewComment","useState","userName","setUserName","userEmail","setUserEmail","userBody","setUserBody","onSubmit","event","preventDefault","placeholder","onChange","target","handleChangeName","handleChangeEmail","handleChangeBody","PostDetails","selectedPost","comments","setComments","visibleComments","setVaisibleComments","loadComments","commentsFromServer","useEffect","deleteComment","commentId","length","comment","App","setPosts","selectedUserId","setSelectedUserId","setSelectedPostId","find","loadUserPosts","postFromServer","ReactDOM","render","document","getElementById"],"mappings":"qTAAaA,EAAW,oCAEjB,SAAeC,EAAtB,oC,4CAAO,WAA0BC,EAAaC,GAAvC,eAAAC,EAAA,sEACkBC,MAAM,GAAD,OAAIL,GAAJ,OAAeE,GAAOC,GAD7C,cACCG,EADD,yBAGEA,EAASC,QAHX,4C,sBAMA,IAIMC,EAAM,uCAAG,WACpBC,EACAC,EACAC,EACAC,GAJoB,eAAAR,EAAA,sEAMGC,MAAM,GAAD,OAAIL,EAAJ,aAAyB,CACnDa,OAAQ,OACRC,QAAS,CACP,eAAgB,mCAElBF,KAAMG,KAAKC,UAAU,CACnBP,SACAC,OACAC,QACAC,WAfgB,cAMdN,EANc,yBAmBbA,EAASC,QAnBI,2CAAH,4DCNZ,SAASU,EAAaC,GAC3B,OACSjB,EADM,IAAXiB,EACY,wBAA0BA,GALnB,U,6BCOZC,EAA6B,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YAClE,OACE,sBAAKC,UAAU,YAAf,UACE,wCAEA,oBAAIA,UAAU,kBAAd,SACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,qBACEF,UAAU,kBADZ,UAIE,gCACE,6CACaE,EAAKP,OADlB,QAGCO,EAAKC,SAER,wBACEC,KAAK,SACLJ,UAAU,2BACVK,MAAOP,EACPQ,QAAS,kBAAMP,EAAYG,EAAKK,KAJlC,SAMGT,IAAmBI,EAAKK,GACrB,QACA,WAhBDL,EAAKK,aCZTC,G,MAAkC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAChD,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KA0BA,OACE,uBACEhB,UAAU,iBACViB,SATiB,SAACC,GACpBA,EAAMC,iBACNV,EAAcE,EAAUE,EAAWE,GAPnCH,EAAY,IACZE,EAAa,IACbE,EAAY,KAUZ,UAIE,qBAAKhB,UAAU,aAAf,SACE,uBACEI,KAAK,OACLjB,KAAK,OACLiC,YAAY,YACZpB,UAAU,wBACVK,MAAOM,EACPU,SAAU,SAACH,GAAD,OApCO,SAACA,GACxBN,EAAYM,EAAMI,OAAOjB,OAmCEkB,CAAiBL,QAI1C,qBAAKlB,UAAU,aAAf,SACE,uBACEI,KAAK,OACLjB,KAAK,QACLiC,YAAY,aACZpB,UAAU,wBACVK,MAAOQ,EACPQ,SAAU,SAACH,GAAD,OA3CQ,SAACA,GACzBJ,EAAaI,EAAMI,OAAOjB,OA0CCmB,CAAkBN,QAI3C,qBAAKlB,UAAU,aAAf,SACE,0BACEb,KAAK,OACLiC,YAAY,oBACZpB,UAAU,wBACVK,MAAOU,EACPM,SAAU,SAACH,GAAD,OAjDO,SAACA,GACxBF,EAAYE,EAAMI,OAAOjB,OAgDEoB,CAAiBP,QAI1C,wBACEd,KAAK,SACLJ,UAAU,uCAFZ,gC,UC9DO0B,EAA+B,SAAC,GAAsC,IAApC5B,EAAmC,EAAnCA,eAAgB6B,EAAmB,EAAnBA,aAC7D,EAAgCjB,mBAAqB,IAArD,mBAAOkB,EAAP,KAAiBC,EAAjB,KACA,EAA+CnB,oBAAS,GAAxD,mBAAOoB,EAAP,KAAwBC,EAAxB,KAEMC,EAAY,uCAAG,4BAAAnD,EAAA,sECRdH,EAAO,2BDSqCoB,IAD9B,OACbmC,EADa,OAGnBJ,EAAYI,GAHO,2CAAH,qDAMlBC,qBAAU,WACRF,MACC,CAAClC,IAEJ,IAIMqC,EAAa,uCAAG,WAAOC,GAAP,SAAAvD,EAAA,sEJpBfH,EIqBQ,aAAD,OAAc0D,GJrBR,CAAE9C,OAAQ,WIoBR,uBAEd0C,IAFc,2CAAH,sDAKbvB,EAAa,uCAAG,WAAOtB,EAAcC,EAAeC,GAApC,SAAAR,EAAA,sEACdI,EAAOa,EAAgBX,EAAMC,EAAOC,GADtB,uBAEd2C,IAFc,2CAAH,0DAKnB,OACE,sBAAKhC,UAAU,cAAf,UACE,+CACA,yBAASA,UAAU,oBAAnB,SACE,4BAAI2B,EAAaxB,UAGnB,0BAASH,UAAU,wBAAnB,UACE,wBACEI,KAAK,SACLJ,UAAU,SACVM,QAzBa,WACnByB,GAAqBD,IAqBjB,SAKGA,EAAe,eACNF,EAASS,OADH,4BAGNT,EAASS,OAHH,eAOjBP,GACC,oBAAI9B,UAAU,oBAAd,SACG4B,EAAS3B,KAAI,SAAAqC,GAAO,OACnB,qBAEEtC,UAAU,yBAFZ,UAIE,wBACEI,KAAK,SACLJ,UAAU,oCACVM,QAAS,kBAAM6B,EAAcG,EAAQ/B,KAHvC,eAOA,4BAAI+B,EAAQjD,SAVPiD,EAAQ/B,YAiBvB,kCACE,qBAAKP,UAAU,4BAAf,SACE,cAAC,EAAD,CAAgBS,cAAeA,YEA1B8B,EA1EO,WACpB,MAA0B7B,mBAAiB,IAA3C,mBAAOb,EAAP,KAAc2C,EAAd,KACA,EAA4C9B,mBAAS,GAArD,mBAAO+B,EAAP,KAAuBC,EAAvB,KACA,EAA4ChC,mBAAS,GAArD,mBAAOZ,EAAP,KAAuB6C,EAAvB,KACMhB,EAAe9B,EAAM+C,MAAK,SAAA1C,GAAI,OAAIA,EAAKK,KAAOT,KAE9C+C,EAAa,uCAAG,4BAAAhE,EAAA,sEACSa,EAAa+C,GADtB,OACdK,EADc,OAGpBN,EAASM,GAHW,2CAAH,qDAMnBZ,qBAAU,WACRW,MACC,CAACJ,IAYJ,OACE,sBAAKzC,UAAU,MAAf,UACE,wBAAQA,UAAU,cAAlB,SACE,wDAGE,yBACEqB,SAjBW,SAACH,GACpBwB,GAAmBxB,EAAMI,OAAOjB,QAiBxBA,MAAOoC,EACPzC,UAAU,qBAHZ,UAKE,wBAAQK,MAAM,IAAd,uBACA,wBAAQA,MAAM,IAAd,2BACA,wBAAQA,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,kCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,IAAd,sCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,KAAd,mCAKN,uBAAML,UAAU,YAAhB,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEH,MAAOA,EACPC,eAAgBA,EAChBC,YArCU,SAACb,GAAD,OAEdyD,EADJzD,IAAWY,EACWZ,EACA,QAsClB,qBAAKc,UAAU,eAAf,SACG2B,GACC,cAAC,EAAD,CACE7B,eAAgBA,EAChB6B,aAAcA,aCrE5BoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eb26fabf.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n\nexport async function getData<T>(url: string, options?: {}): Promise<T> {\n  const response = await fetch(`${BASE_URL}${url}`, options);\n\n  return response.json();\n}\n\nexport const remove = (url: string) => {\n  return getData(url, { method: 'DELETE' });\n};\n\nexport const create = async (\n  postId: number,\n  name: string,\n  email: string,\n  body: string,\n): Promise<Comment> => {\n  const response = await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n\n  return response.json();\n};\n","import { getData } from './api';\n\nexport function getPosts() {\n  return getData<Post[]>('/posts');\n}\n\nexport function getUserPosts(userId: number) {\n  if (userId !== 0) {\n    return getData<Post[]>(`/posts?userId=${userId}`);\n  }\n\n  return getPosts();\n}\n\nexport function getPostDetails(postId: number) {\n  return getData<Post[]>(`${postId}`);\n}\n","import React from 'react';\nimport './PostsList.scss';\n\ntype Props = {\n  posts: Post[],\n  selectedPostId: number,\n  handleClick: (postId: number) => void,\n\n};\n\nexport const PostsList: React.FC<Props> = ({ posts, selectedPostId, handleClick }) => {\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            className=\"PostsList__item\"\n            key={post.id}\n          >\n            <div>\n              <b>\n                {`[User #${post.userId}]:`}\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              value={selectedPostId}\n              onClick={() => handleClick(post.id)}\n            >\n              {selectedPostId === post.id\n                ? 'Close'\n                : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  addNewComment: (name: string, email: string, body: string) => void;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ addNewComment }) => {\n  const [userName, setUserName] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userBody, setUserBody] = useState('');\n\n  const handleChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUserName(event.target.value);\n  };\n\n  const handleChangeEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUserEmail(event.target.value);\n  };\n\n  const handleChangeBody = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setUserBody(event.target.value);\n  };\n\n  const clearForm = () => {\n    setUserName('');\n    setUserEmail('');\n    setUserBody('');\n  };\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addNewComment(userName, userEmail, userBody);\n    clearForm();\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={userName}\n          onChange={(event) => handleChangeName(event)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={userEmail}\n          onChange={(event) => handleChangeEmail(event)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={userBody}\n          onChange={(event) => handleChangeBody(event)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n        // onClick={() => addNewComment(userName, userEmail, userBody)}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostComments } from '../../api/comments';\nimport './PostDetails.scss';\nimport { remove, create } from '../../api/api';\n\ntype Props = {\n  selectedPostId: number,\n  selectedPost: Post,\n};\n\nexport const PostDetails: React.FC<Props> = ({ selectedPostId, selectedPost }) => {\n  const [comments, setComments] = useState<Comments[]>([]);\n  const [visibleComments, setVaisibleComments] = useState(true);\n\n  const loadComments = async () => {\n    const commentsFromServer = await getPostComments(selectedPostId);\n\n    setComments(commentsFromServer);\n  };\n\n  useEffect(() => {\n    loadComments();\n  }, [selectedPostId]);\n\n  const showComments = () => {\n    setVaisibleComments(!visibleComments);\n  };\n\n  const deleteComment = async (commentId: number) => {\n    await remove(`/comments/${commentId}`);\n    await loadComments();\n  };\n\n  const addNewComment = async (name: string, email: string, body: string) => {\n    await create(selectedPostId, name, email, body);\n    await loadComments();\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      <section className=\"PostDetails__post\">\n        <p>{selectedPost.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={showComments}\n        >\n          {visibleComments ? (\n            `Hide ${comments.length} comments`\n          ) : (\n            `Show ${comments.length} comments`\n          )}\n        </button>\n\n        {visibleComments && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                key={comment.id}\n                className=\"PostDetails__list-item\"\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => deleteComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm addNewComment={addNewComment} />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { getData } from './api';\n\nexport function getComments() {\n  return getData<Post[]>('/comments');\n}\n\nexport function getPostComments(postId: number) {\n  return getData<Comments[]>(`/comments?postId=${postId}`);\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState } from 'react';\nimport { getUserPosts } from './api/posts';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const selectedPost = posts.find(post => post.id === selectedPostId);\n\n  const loadUserPosts = async () => {\n    const postFromServer = await getUserPosts(selectedUserId);\n\n    setPosts(postFromServer);\n  };\n\n  useEffect(() => {\n    loadUserPosts();\n  }, [selectedUserId]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n  };\n\n  const handleClick = (postId: number) => (\n    postId !== selectedPostId\n      ? setSelectedPostId(postId)\n      : setSelectedPostId(0)\n  );\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            onChange={handleChange}\n            value={selectedUserId}\n            className=\"App__user-selector\"\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            handleClick={handleClick}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPost && (\n            <PostDetails\n              selectedPostId={selectedPostId}\n              selectedPost={selectedPost}\n            />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}